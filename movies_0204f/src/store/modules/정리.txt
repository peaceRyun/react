
import { createSlice } from '@reduxjs/toolkit';
import 참조변수 from '../../assets/api/데이터';

const initialState = {};

export const xxSlice = createSlice({
    name: 'xx',
    initialState,
    reducers: {},
});

export const {} = xxSlice.actions;
export default xxSlice.reducer;

//////////////////////////////////

import {  createAsyncThunk } from '@reduxjs/toolkit';
import axios from 'axios';
 
export const getxx = createAsyncThunk('xx/getxx', async () => {
    const res = await axios.get(``);
    return res.data;
});

/////////////////// 사용예시


import { createSlice } from '@reduxjs/toolkit';
import { getxxx } from './getThunk'
 
const initialState = {    
}; 

export const 이름Slice = createSlice({
    name: '이름',
    initialState,
    reducers: {},
    extraReducers: (builder) => {
        builder
            .addCase(getxx.pending, (state, action) => {
                 
            })
            .addCase(getxx.fulfilled, (state, action) => {
                 
            })
            .addCase(getxx.rejected, (state, action) => {
                
            });
    },
});

// export const 이름Actions = 이름Slice.actions;
export default 이름Slice.reducer;

/////////////////////////////////////////////////
방법1  : 성격별로 slice 분리 작업 
방법2  : 하나로 slice 작업 


////////////////////////////////////////////////
게시판 원리 
posts : 데이터 , 
postsPerPage = 페이지에 보여줄 개수
currentPage = 현재 페이지

firstPost = 0, 10, 20 ..  시작번호
lastPost  =10, 20, 30,  - 끝번호

postMod = 한페이지에 보여줄개수  -> 남은개수 
               115개 데이터가 있으면 10개씩 보여줄때 남은 데이터가 5개

pageNumber  = 페이징의 a의 개수 
총 페이지 수 = Math.ceil(전체 컨텐츠 개수 / 한 페이지에 보여주고자 하는 컨텐츠의 개수)

